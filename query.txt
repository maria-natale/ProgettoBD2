Cerca ristorante per nome
db.ristoranti.find({name: '#1 BUFFET'})
db.ristoranti.find({name: /^BUFF/}) iniziano per BUFF

db.ristoranti.distinct('city', {city: {$regex: '^C'}})


Cerca ristoranti per Stato
db.ristoranti.find({state: 'California'})

Prendi i primi 10 ristoranti per ogni stato con rischio basso

db.ristoranti.find({state: 'California', ''}).limit(10)

Cerca ristorante per stato, citt√†, rischio 
db.ristoranti.find({state: 'California', city: 'LOS ANGELES'}).limit(2)
Cerca ristorante per nome, ordine per rischio
risks = ['Risk 1 (High)', 'Risk 2 (Medium)', 'Risk 3 (Low)', 'Not Yet Graded']
db.ristoranti.aggregate([
  {
    "$match": {
      state: "Illinois"
    }
  },
  {
    "$project": {
      "_id": 1,
      "name": 1,
      "address": 1,
      "city": 1,
      "zipcode": 1,
      "state": 1,
      "rischia": {
        $first: "$violations.risk"
      },
      "order": {
        $cond: {
          if: {
            $eq: [
              {
                $first: "$violations.risk"
              },
              "Risk 3 (Low)"
            ]
          },
          then: 1,
          else: {
            $cond: {
              if: {
                $eq: [
                  {
                    $first: "$violations.risk"
                  },
                  "Risk 2 (Medium)"
                ]
              },
              then: 2,
              else: 3
            }
          }
        }
      },
      has_risk: {$in: [{$first: "$violations.risk"}, risks]}
    }
  },
  {
    "$sort": {
      "order": -1
    }
  }
])

####prendi la prima 
db.ristoranti.aggregate([
    {"$match": {"name": ".88$ AND MORE ASIAN GROCERY"}},
    
        { "$project": {
            "risk": { $first: "$violations" },
            "_id": 0,
        "name":1,
        "state":1,
        "address":1
        }}
])


var states = db.ristoranti.distinct('state')
for (i in states){
	s = states[i]
	print(s)
	db.ristoranti.find({state: s}).limit(1);
}

###FUNZIONA
var states = db.ristoranti.distinct('state')
results = []
for (i in states){
	s = states[i]
	print(s)
	results.push(db.ristoranti.find({state: s}, {name:1, state:1}).limit(10).toArray());
}
print(results)


var states = db.ristoranti.distinct('state')
db.ristoranti.find({state:states[0]}, {name:1, state:1})


db.ristoranti.aggregate([
	{	
		"$match":{
			"_id": ObjectId("60e5bb62537fdfbd5b3b9495")
		}
	},
	{
	"$sort":{
		"violations.inspection_date": -1
		}
	}
])
